package com.example.requiemrestservice.controller;

import com.example.requiemrestservice.model.Follow;
import com.example.requiemrestservice.model.MyUser;
import com.example.requiemrestservice.service.FollowService;
import com.example.requiemrestservice.service.MyUserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.stream.Collectors;

@RestController
@RequestMapping("/user")
@CrossOrigin(origins = "http://localhost:3000")
public class UserController {
    @Autowired // This means to get the bean called userRepository. Which is auto-generated by Spring, we will use it to handle the data
    private MyUserService myUserService;

    @GetMapping(path="/profile/{username}")
    public @ResponseBody ResponseEntity<?> getProfile(@PathVariable String username) {
        MyUser myUser = myUserService.getByUsername(username);
        if (myUser != null) {
            return ResponseEntity.ok(myUser);

        }
        return ResponseEntity.badRequest().body("Not such a user!");
    }


    @GetMapping(path="/recommended/{id}")
    public @ResponseBody ResponseEntity<?> getRecommended(@PathVariable Integer id) {
        boolean check = myUserService.getById(id).isPresent();
        if (check) {
            MyUser myUser = myUserService.getById(id).get();
            List<MyUser> users = (List<MyUser>) myUserService.getAll();
            return ResponseEntity.ok(users.stream()
                    .filter(user -> !Objects.equals(user.getId(), myUser.getId()))
                    .sorted((u1, u2) -> u2.getCreatedAt().compareTo(u1.getCreatedAt()))
                    .collect(Collectors.toList()));

        }
        else{
            return ResponseEntity.ok( myUserService.getAll());
        }
    }


    @GetMapping(path="/test")
    public String test() {
        return "Hello, ALL DONE";
    }
}
